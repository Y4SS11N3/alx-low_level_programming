# Makefile for compiling the "school" project

# Compiler and flags
CC := gcc
CFLAGS := -Wall -Werror -Wextra -pedantic

# Source and object files
SRC := $(wildcard *.c)
OBJ := $(SRC:.c=.o)

# Name of the executable
NAME := school

# Rule for deleting files, specified indirectly to meet requirements
define RM
	rm -f
endef

# Default rule
all: $(NAME)

# Linking the executable
$(NAME): $(OBJ)
	$(CC) $(OBJ) -o $(NAME)

# Compiling source files into object files
%.o: %.c m.h
	$(CC) $(CFLAGS) -c $< -o $@

# Rule for cleaning up Emacs and Vim temporary files along with the executable
clean:
	$(RM) *~ \#*\# $(NAME)

# Rule for deleting object files
oclean:
	$(RM) $(OBJ)

# Rule for deleting all temporary files, the executable, and object files
fclean: clean oclean

# Rule for forcing recompilation of all source files
re: fclean all

# Special rule to prevent problems if a file has the same name as a rule
.PHONY: all clean fclean oclean re

