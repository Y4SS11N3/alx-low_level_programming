# Makefile for compiling the "school" project

# Compiler
CC := gcc

# Source and object files
SRC := $(wildcard *.c)
OBJ := $(patsubst %.c,%.o,$(SRC))

# Name of the executable
NAME := school

# Rule for deleting files
RM := rm -f

# Default rule
all: $(NAME)

# Linking the executable
$(NAME): $(OBJ)
	@echo "Linking the executable..."
	$(CC) $(OBJ) -o $(NAME)

# Compiling source files into object files
main.o: main.c m.h
	@echo "Compiling main.c..."
	$(CC) -c $< -o $@

school.o: school.c m.h
	@echo "Compiling school.c..."
	$(CC) -c $< -o $@

# Rule for cleaning up Emacs and Vim temporary files along with the executable and object files
clean:
	@echo "Cleaning up..."
	$(RM) *~ \#*\# $(NAME) $(OBJ)

# Rule for forcing recompilation of all source files
re: clean all

# Ensure that the header file m.h exists
m.h:
	@echo "Error: Missing header file m.h" >&2; exit 1

# Special rule to prevent problems if a file has the same name as a rule
.PHONY: all clean re

